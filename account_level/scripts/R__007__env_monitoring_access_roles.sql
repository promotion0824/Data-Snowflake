-- -- ------------------------------------------------------------------------------------------------------------------------------
--  Grant the deployment pipeline role access to monitoring_db.transformed
-- -- ------------------------------------------------------------------------------------------------------------------------------


-- Reader role
GRANT IMPORTED PRIVILEGES ON DATABASE SNOWFLAKE TO ROLE DEPLOYMENT_PIPELINE;

GRANT USAGE ON DATABASE monitoring_db TO ROLE DEPLOYMENT_PIPELINE;
GRANT USAGE ON SCHEMA monitoring_db.transformed TO ROLE DEPLOYMENT_PIPELINE;
GRANT SELECT ON ALL TABLES IN SCHEMA monitoring_db.transformed TO ROLE DEPLOYMENT_PIPELINE;
GRANT SELECT ON ALL EXTERNAL TABLES IN SCHEMA monitoring_db.transformed TO ROLE DEPLOYMENT_PIPELINE;
GRANT SELECT ON ALL VIEWS IN SCHEMA monitoring_db.transformed TO ROLE DEPLOYMENT_PIPELINE;
GRANT SELECT ON ALL VIEWS IN SCHEMA monitoring_db.published TO ROLE DEPLOYMENT_PIPELINE;
GRANT SELECT ON ALL MATERIALIZED VIEWS IN SCHEMA monitoring_db.transformed TO ROLE DEPLOYMENT_PIPELINE;
GRANT SELECT ON ALL MATERIALIZED VIEWS IN SCHEMA monitoring_db.published TO ROLE DEPLOYMENT_PIPELINE;
GRANT SELECT ON FUTURE TABLES IN SCHEMA monitoring_db.transformed TO ROLE DEPLOYMENT_PIPELINE;
GRANT SELECT ON FUTURE EXTERNAL TABLES IN SCHEMA monitoring_db.transformed TO ROLE DEPLOYMENT_PIPELINE;
GRANT SELECT ON FUTURE VIEWS IN SCHEMA monitoring_db.transformed TO ROLE DEPLOYMENT_PIPELINE;
GRANT SELECT ON FUTURE VIEWS IN SCHEMA monitoring_db.published TO ROLE DEPLOYMENT_PIPELINE;
GRANT SELECT ON FUTURE MATERIALIZED VIEWS  IN SCHEMA monitoring_db.transformed TO ROLE DEPLOYMENT_PIPELINE;
GRANT SELECT ON FUTURE MATERIALIZED VIEWS  IN SCHEMA monitoring_db.published TO ROLE DEPLOYMENT_PIPELINE;
GRANT USAGE ON ALL FUNCTIONS IN SCHEMA monitoring_db.transformed TO ROLE DEPLOYMENT_PIPELINE;
GRANT USAGE ON FUTURE FUNCTIONS IN SCHEMA monitoring_db.transformed TO ROLE DEPLOYMENT_PIPELINE;
GRANT USAGE ON ALL FILE FORMATS IN SCHEMA monitoring_db.transformed TO ROLE DEPLOYMENT_PIPELINE;
GRANT USAGE ON FUTURE FILE FORMATS IN SCHEMA monitoring_db.transformed TO ROLE DEPLOYMENT_PIPELINE;
GRANT USAGE ON ALL STAGES IN SCHEMA monitoring_db.transformed TO ROLE DEPLOYMENT_PIPELINE;
GRANT USAGE ON FUTURE STAGES IN SCHEMA monitoring_db.transformed TO ROLE DEPLOYMENT_PIPELINE;
GRANT SELECT ON ALL STREAMS IN SCHEMA monitoring_db.transformed TO ROLE DEPLOYMENT_PIPELINE;
GRANT SELECT ON FUTURE STREAMS IN SCHEMA monitoring_db.transformed TO ROLE DEPLOYMENT_PIPELINE;


-- Writer role
GRANT USAGE ON DATABASE monitoring_db TO ROLE DEPLOYMENT_PIPELINE;
GRANT USAGE ON SCHEMA monitoring_db.transformed TO ROLE DEPLOYMENT_PIPELINE;
GRANT INSERT, UPDATE, DELETE, TRUNCATE ON ALL TABLES IN SCHEMA monitoring_db.transformed TO ROLE DEPLOYMENT_PIPELINE;
GRANT INSERT, UPDATE, DELETE, TRUNCATE ON FUTURE TABLES IN SCHEMA monitoring_db.transformed TO ROLE DEPLOYMENT_PIPELINE;
GRANT USAGE ON ALL PROCEDURES IN SCHEMA monitoring_db.transformed TO ROLE DEPLOYMENT_PIPELINE;
GRANT USAGE ON FUTURE PROCEDURES IN SCHEMA monitoring_db.transformed TO ROLE DEPLOYMENT_PIPELINE;
GRANT USAGE ON ALL FUNCTIONS IN SCHEMA monitoring_db.transformed TO ROLE DEPLOYMENT_PIPELINE;
GRANT USAGE ON FUTURE FUNCTIONS IN SCHEMA monitoring_db.transformed TO ROLE DEPLOYMENT_PIPELINE;

-- DDL role
GRANT USAGE ON DATABASE monitoring_db TO ROLE DEPLOYMENT_PIPELINE;
GRANT USAGE ON SCHEMA monitoring_db.transformed TO ROLE DEPLOYMENT_PIPELINE;
GRANT CREATE TABLE ON SCHEMA monitoring_db.transformed TO ROLE DEPLOYMENT_PIPELINE;
GRANT CREATE EXTERNAL TABLE ON SCHEMA monitoring_db.transformed TO ROLE DEPLOYMENT_PIPELINE;
GRANT CREATE VIEW ON SCHEMA monitoring_db.transformed TO ROLE DEPLOYMENT_PIPELINE;
GRANT CREATE VIEW ON SCHEMA monitoring_db.published TO ROLE DEPLOYMENT_PIPELINE;
GRANT CREATE MATERIALIZED VIEW ON SCHEMA monitoring_db.transformed TO ROLE DEPLOYMENT_PIPELINE;
GRANT CREATE MATERIALIZED VIEW ON SCHEMA monitoring_db.published TO ROLE DEPLOYMENT_PIPELINE;
GRANT CREATE STAGE ON SCHEMA monitoring_db.transformed TO ROLE DEPLOYMENT_PIPELINE;
GRANT CREATE FILE FORMAT ON SCHEMA monitoring_db.transformed TO ROLE DEPLOYMENT_PIPELINE;
GRANT CREATE STREAM ON SCHEMA monitoring_db.transformed TO ROLE DEPLOYMENT_PIPELINE;
GRANT CREATE TASK ON SCHEMA monitoring_db.transformed TO ROLE DEPLOYMENT_PIPELINE;
GRANT CREATE PIPE ON SCHEMA monitoring_db.transformed TO ROLE DEPLOYMENT_PIPELINE;
GRANT CREATE FUNCTION ON SCHEMA monitoring_db.transformed TO ROLE DEPLOYMENT_PIPELINE;
GRANT CREATE PROCEDURE ON SCHEMA monitoring_db.transformed TO ROLE DEPLOYMENT_PIPELINE;
GRANT CREATE SEQUENCE ON SCHEMA monitoring_db.transformed TO ROLE DEPLOYMENT_PIPELINE;

-- Owner role
GRANT OWNERSHIP ON SCHEMA monitoring_db.transformed TO ROLE DEPLOYMENT_PIPELINE COPY CURRENT GRANTS;
GRANT OWNERSHIP ON ALL TABLES IN SCHEMA monitoring_db.transformed TO ROLE DEPLOYMENT_PIPELINE COPY CURRENT GRANTS;
GRANT OWNERSHIP ON ALL EXTERNAL TABLES IN SCHEMA monitoring_db.transformed TO ROLE DEPLOYMENT_PIPELINE COPY CURRENT GRANTS;
GRANT OWNERSHIP ON ALL VIEWS IN SCHEMA monitoring_db.transformed TO ROLE DEPLOYMENT_PIPELINE COPY CURRENT GRANTS;
GRANT OWNERSHIP ON ALL VIEWS IN SCHEMA monitoring_db.published TO ROLE DEPLOYMENT_PIPELINE COPY CURRENT GRANTS;
GRANT OWNERSHIP ON ALL MATERIALIZED VIEWS IN SCHEMA monitoring_db.transformed TO ROLE DEPLOYMENT_PIPELINE COPY CURRENT GRANTS;
GRANT OWNERSHIP ON ALL MATERIALIZED VIEWS IN SCHEMA monitoring_db.published TO ROLE DEPLOYMENT_PIPELINE COPY CURRENT GRANTS;
GRANT OWNERSHIP ON ALL STAGES IN SCHEMA monitoring_db.transformed TO ROLE DEPLOYMENT_PIPELINE COPY CURRENT GRANTS;
GRANT OWNERSHIP ON ALL FILE FORMATS IN SCHEMA monitoring_db.transformed TO ROLE DEPLOYMENT_PIPELINE COPY CURRENT GRANTS;
GRANT OWNERSHIP ON ALL STREAMS IN SCHEMA monitoring_db.transformed TO ROLE DEPLOYMENT_PIPELINE COPY CURRENT GRANTS;
GRANT OWNERSHIP ON ALL PROCEDURES IN SCHEMA monitoring_db.transformed TO ROLE DEPLOYMENT_PIPELINE COPY CURRENT GRANTS;
GRANT OWNERSHIP ON ALL FUNCTIONS IN SCHEMA monitoring_db.transformed TO ROLE DEPLOYMENT_PIPELINE COPY CURRENT GRANTS;
GRANT OWNERSHIP ON ALL SEQUENCES IN SCHEMA monitoring_db.transformed TO ROLE DEPLOYMENT_PIPELINE COPY CURRENT GRANTS;
GRANT OWNERSHIP ON ALL TASKS IN SCHEMA monitoring_db.transformed TO ROLE DEPLOYMENT_PIPELINE COPY CURRENT GRANTS;

-- Before granting ownership on future objects, existing future grants in schema must be removed
-- SHOW FUTURE GRANTS IN SCHEMA transformed;

-- EXECUTE IMMEDIATE $$
-- DECLARE
--   c1 CURSOR FOR 
--     SELECT REPLACE("grant_on", '_', ' ') AS object_type, "grantee_name" AS grantee_name 
--     FROM TABLE(RESULT_SCAN(LAST_QUERY_ID()))
--     WHERE "privilege" = 'OWNERSHIP';  
--   object_type STRING;
--   grantee_name STRING;
--   cmd STRING;
-- BEGIN
--   FOR record IN c1 DO
--     cmd := 'REVOKE OWNERSHIP ON FUTURE ' || record.object_type || 'S IN SCHEMA monitoring_db.transformed FROM ROLE ' || record.grantee_name;
--     EXECUTE IMMEDIATE cmd;
--   END FOR;
--   RETURN 'DONE';
-- END;
-- $$;

-- GRANT OWNERSHIP ON FUTURE TABLES IN SCHEMA monitoring_db.transformed TO ROLE DEPLOYMENT_PIPELINE;
-- GRANT OWNERSHIP ON FUTURE EXTERNAL TABLES IN SCHEMA monitoring_db.transformed TO ROLE DEPLOYMENT_PIPELINE;
-- GRANT OWNERSHIP ON FUTURE VIEWS IN SCHEMA monitoring_db.transformed TO ROLE DEPLOYMENT_PIPELINE;
-- GRANT OWNERSHIP ON FUTURE VIEWS IN SCHEMA monitoring_db.published TO ROLE DEPLOYMENT_PIPELINE;
-- GRANT OWNERSHIP ON FUTURE MATERIALIZED VIEWS IN SCHEMA monitoring_db.transformed TO ROLE DEPLOYMENT_PIPELINE;
-- GRANT OWNERSHIP ON FUTURE STAGES IN SCHEMA monitoring_db.transformed TO ROLE DEPLOYMENT_PIPELINE;
-- GRANT OWNERSHIP ON FUTURE FILE FORMATS IN SCHEMA monitoring_db.transformed TO ROLE DEPLOYMENT_PIPELINE;
-- GRANT OWNERSHIP ON FUTURE STREAMS IN SCHEMA monitoring_db.transformed TO ROLE DEPLOYMENT_PIPELINE;
-- GRANT OWNERSHIP ON FUTURE PROCEDURES IN SCHEMA monitoring_db.transformed TO ROLE DEPLOYMENT_PIPELINE;
-- GRANT OWNERSHIP ON FUTURE FUNCTIONS IN SCHEMA monitoring_db.transformed TO ROLE DEPLOYMENT_PIPELINE;
-- GRANT OWNERSHIP ON FUTURE SEQUENCES IN SCHEMA monitoring_db.transformed TO ROLE DEPLOYMENT_PIPELINE;
-- GRANT OWNERSHIP ON FUTURE PIPES IN SCHEMA monitoring_db.transformed TO ROLE DEPLOYMENT_PIPELINE;
-- GRANT OWNERSHIP ON FUTURE TASKS IN SCHEMA monitoring_db.transformed TO ROLE DEPLOYMENT_PIPELINE;

-- Pipe execution must be paused before transferring ownership
--SHOW PIPES IN monitoring_db.transformed;

-- EXECUTE IMMEDIATE $$
-- DECLARE
--   c1 CURSOR FOR 
--     SELECT "name" AS name
--     FROM TABLE(RESULT_SCAN(LAST_QUERY_ID())); 
--   name STRING;
--   cmd STRING;
-- BEGIN
--   FOR record IN c1 DO
--     cmd := 'ALTER PIPE monitoring_db.transformed.' || record.name || ' SET PIPE_EXECUTION_PAUSED=true';
--     EXECUTE IMMEDIATE cmd;
--     cmd := 'GRANT OWNERSHIP ON PIPE monitoring_db.transformed.' || record.name || ' TO ROLE DEPLOYMENT_PIPELINE REVOKE CURRENT GRANTS';
--     EXECUTE IMMEDIATE cmd;
--     cmd := 'GRANT MONITOR ON PIPE monitoring_db.transformed.' || record.name || ' TO ROLE monitoring_pipeline_reader';
--     EXECUTE IMMEDIATE cmd;
--     cmd := 'USE ROLE deployment_pipeline';
--     EXECUTE IMMEDIATE cmd;
--     cmd := 'SELECT SYSTEM$PIPE_FORCE_RESUME(''{{ environment|upper }}_DB.transformed.' || record.name || ''')';
--     EXECUTE IMMEDIATE cmd;
--     cmd := 'ALTER PIPE monitoring_db.transformed.' || record.name || ' SET PIPE_EXECUTION_PAUSED=false';
--     EXECUTE IMMEDIATE cmd;

--   END FOR;
--   RETURN 'DONE';
-- END;
-- $$;

-- All tasks in the schema are suspended automatically after ownership transfer.
-- -- Identify all root tasks and use command that also recursively resumes all dependent tasks.
-- SHOW TASKS IN monitoring_db.transformed;
-- EXECUTE IMMEDIATE $$
-- DECLARE
--   c1 CURSOR FOR 
--     SELECT "database_name" AS database_name, "schema_name" AS schema_name,"name" AS name
--     FROM TABLE(RESULT_SCAN(LAST_QUERY_ID()))
--     WHERE ARRAY_SIZE("predecessors") = 0 AND "state" = 'suspended';
--   cmd STRING;
-- BEGIN
--   FOR record IN c1 DO
--     cmd := 'SELECT SYSTEM$TASK_DEPENDENTS_ENABLE(''' || record.database_name || '.' || record.schema_name || '.' || record.name || ''')';
--     EXECUTE IMMEDIATE cmd;
--   END FOR;
--   RETURN 'DONE';
-- END;
-- $$;

-- dummy statement after all the comments.
SELECT 'done';