parameters:
- name: keyVaultSubscriptionName
  type: string

- name: keyVaultName
  type: string

- name: dataEngineeringServicePasswordSecretName
  type: string

steps:
- checkout: self

- bash: echo ""
  displayName: "# Pre-deployment steps"

- task: UsePythonVersion@0
  displayName: 'Set python version 3.8.x'
  inputs:
    versionSpec: '3.8.x'

- task: Bash@3
  displayName: 'Installing SchemaChange'
  inputs:
    targetType: 'inline'
    arguments: '--output $(Build.ArtifactStagingDirectory)'
    script: |
      python --version
      pip install schemachange --upgrade

- script: 
    |
    sudo touch ~/.profile
    curl -O https://sfc-repo.azure.snowflakecomputing.com/snowsql/bootstrap/1.2/linux_x86_64/snowflake-snowsql-1.2.20-1.x86_64.rpm
    curl -O https://sfc-repo.azure.snowflakecomputing.com/snowsql/bootstrap/1.2/linux_x86_64/snowsql-1.2.20-linux_x86_64.bash
    SNOWSQL_DEST=~/bin SNOWSQL_LOGIN_SHELL=~/.profile bash snowsql-1.2.20-linux_x86_64.bash
  displayName: Installing Snowsql

- task: AzureCLI@2
  displayName: Get agent IP address
  inputs:
    azureSubscription: ${{ parameters.keyVaultSubscriptionName }}
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      ip=$(curl -s "http://ipinfo.io/json" | jq '.ip')
      echo "Agent IP address: ${ip}"
      echo "##vso[task.setvariable variable=agentIpAddress]$ip"

- task: AzureCLI@2
  displayName: Create key vault firewall rule for the agent
  inputs:
    azureSubscription: '${{ parameters.keyVaultSubscriptionName }}'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      echo 'Agent IP Address: $(agentIpAddress) '
      az keyvault network-rule add  --name ${{ parameters.keyVaultName }} --ip-address $(agentIpAddress) 

- task: AzureCLI@2
  displayName: Sleep for 30 seconds
  inputs:
    azureSubscription: '${{ parameters.keyVaultSubscriptionName }}'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: sleep 30

- task: AzureKeyVault@1
  displayName: Download key vault secrets
  inputs:
    azureSubscription: '${{ parameters.keyVaultSubscriptionName }}'
    KeyVaultName: '${{ parameters.keyVaultName }}'
    SecretsFilter: '${{ parameters.dataEngineeringServicePasswordSecretName }}'
    RunAsPreJob: false 